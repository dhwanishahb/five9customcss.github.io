export class Handoff{widgetSDK=new AdaWidgetSDK;ready;constructor(){this.initWidget()}initWidget(){this.ready=new Promise((t=>{try{this.widgetSDK.setContainerHeight(550),this.widgetSDK.init((e=>{this.widgetSDK.widgetIsActive||t(null),"WIDGET_INITIALIZED"==e.type&&t(e?.widgetInputs)}))}catch(e){console.error(`Error initializing ADA Widget SDK: ${e}`),t(null)}}))}createConfig(t){const e=this.getDeserializeChatConfig(t.chatConfig);return e.prepopulatedFields.push({k:"name",v:t.firstName},{k:"email",v:t.email},{k:"Chatbot.targetSkill",v:t.targetSkillValue}),e}getDeserializeChatConfig(t){return JSON.parse(t)}initChat(t){F9.Chat.Wrapper.init(t)}static async execute(){try{const t=new Handoff;await t.start()}catch(t){isHandoffError(t)?HandoffFailure.showMessage(t):(console.error(`Failed to handoff chat to agent: ${t}`),HandoffFailure.showMessage())}}async start(){const t=await this.ready;if(!t)throw new Error("Handoff inputs not initialized.");this.launchChat(t)}launchChat(t){try{const e=this.createConfig(t);this.initChat(e)}catch(e){console.error(`Failed to launch chat: ${e}`);throw this.getHandoffError(t)||e}}getHandoffError(t){try{return JSON.parse(t.handoffError)}catch(t){return console.error(`Failed to parse handoff error from widget inputs: ${t}`),null}}}function isHandoffError(t){return"object"==typeof t&&null!==t&&"primary"in t&&"secondary"in t&&"contactPhone"in t}export class HandoffFailure{static DEFAULT_ERROR="Sorry, we are unable to connect you to an agent. Please try again later.";primary;secondary;contactPhone;constructor(t,e,a){this.primary=t||HandoffFailure.DEFAULT_ERROR,this.secondary=e||"",this.contactPhone=a||""}static create(t){return new HandoffFailure(t?.primary,t?.secondary,t?.contactPhone)}static showMessage(t){HandoffFailure.create(t).show()}show(){const t=this.statusDiv;t&&(t.appendChild(this.primaryMessage),this.secondary&&this.contactPhone&&t.appendChild(this.secondaryMessage))}get statusDiv(){const t=document.getElementById("status");return t?(t.innerHTML="",t.className="status",t):(console.error('Element with id "status" not found.'),null)}get primaryMessage(){const t=document.createElement("p");return t.className="status-error",t.textContent=this.primary,t}get secondaryMessage(){const t=document.createElement("p");return t.className="status-secondary",t.appendChild(this.secondaryMessageText),t.appendChild(this.phoneNumber),t.appendChild(this.period),t}get secondaryMessageText(){return document.createTextNode(this.secondary)}get phoneNumber(){const t=document.createElement("span");return t.className="status-error-phone",t.textContent=this.contactPhone,t}period=document.createTextNode(".")}Object.defineProperty(window,"Handoff",{value:Handoff,writable:!1,configurable:!1});export const handoff=()=>Handoff.execute();