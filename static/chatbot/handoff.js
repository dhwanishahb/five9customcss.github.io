export class Handoff{widgetSDK=new AdaWidgetSDK;ready;constructor(){this.initWidget()}initWidget(){this.ready=new Promise((e=>{try{this.widgetSDK.setContainerHeight(595),this.widgetSDK.init((t=>{this.widgetSDK.widgetIsActive||e(null),"WIDGET_INITIALIZED"==t.type&&e(t?.widgetInputs)}))}catch(t){console.error(`Error initializing ADA Widget SDK: ${t}`),e(null)}}))}createConfig(e){let t=this.getDeserializeChatConfig(e.chatConfig);t.messenger||(t.messenger={});const a=window.location.hostname,n=window.location.protocol+"//"+a+"/static/chatbot/EQCustomFive9HandOff.css";return console.log("domain and protocol info from handoff file:: "+n),t.messenger.customCssUrl=n,t.prepopulatedFields.push({k:"name",v:e.firstName},{k:"email",v:e.email},{k:"Chatbot.targetSkill",v:e.targetSkillValue}),t}getDeserializeChatConfig(e){return JSON.parse(e)}initChat(e){F9.Chat.Wrapper.init(e)}static async execute(){try{const e=new Handoff;await e.start()}catch(e){isHandoffError(e)?HandoffFailure.showMessage(e):(console.error(`Failed to handoff chat to agent: ${e}`),HandoffFailure.showMessage())}}async start(){const e=await this.ready;if(!e)throw new Error("Handoff inputs not initialized.");this.launchChat(e)}launchChat(e){try{const t=this.createConfig(e);this.initChat(t)}catch(t){console.error(`Failed to launch chat: ${t}`);throw this.getHandoffError(e)||t}}getHandoffError(e){try{return JSON.parse(e.handoffError)}catch(e){return console.error(`Failed to parse handoff error from widget inputs: ${e}`),null}}}function isHandoffError(e){return"object"==typeof e&&null!==e&&"primary"in e&&"secondary"in e&&"contactPhone"in e}export class HandoffFailure{static DEFAULT_ERROR="Sorry, we are unable to connect you to an agent. Please try again later.";primary;secondary;contactPhone;constructor(e,t,a){this.primary=e||HandoffFailure.DEFAULT_ERROR,this.secondary=t||"",this.contactPhone=a||""}static create(e){return new HandoffFailure(e?.primary,e?.secondary,e?.contactPhone)}static showMessage(e){HandoffFailure.create(e).show()}show(){const e=this.statusDiv;e&&(e.appendChild(this.primaryMessage),this.secondary&&this.contactPhone&&e.appendChild(this.secondaryMessage))}get statusDiv(){const e=document.getElementById("status");return e?(e.innerHTML="",e.className="status",e):(console.error('Element with id "status" not found.'),null)}get primaryMessage(){const e=document.createElement("p");return e.className="status-error",e.textContent=this.primary,e}get secondaryMessage(){const e=document.createElement("p");return e.className="status-secondary",e.appendChild(this.secondaryMessageText),e.appendChild(this.phoneNumber),e.appendChild(this.period),e}get secondaryMessageText(){return document.createTextNode(this.secondary)}get phoneNumber(){const e=document.createElement("span");return e.className="status-error-phone",e.textContent=this.contactPhone,e}period=document.createTextNode(".")}Object.defineProperty(window,"Handoff",{value:Handoff,writable:!1,configurable:!1});export const handoff=()=>Handoff.execute();